swagger: "2.0"
info:
  version: 1.0.0
  title: Pinpoint API
  description: Pinpoint's REST API
  contact:
    name: UBC Launch Pad
    email: team@ubclaunchpad.com
    url: https://github.com/ubclaunchpad/pinpoint
  license:
    name: MIT
    url: https://github.com/ubclaunchpad/pinpoint/blob/master/LICENSE

# servers:
#   - url: https://teehee:$PORT

paths:
  /user/create:
    post:
      summary: Create a user account
      description: teehee
      tags:
        - user
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/user"
      responses:
        200:
          $ref: '#/definitions/OK'
        default:
          $ref: '#/definitions/Error'
  /user/login:
    post:
      summary: Login to user account
      description: teehee
      tags:
        - user
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/login"
      responses:
        200:
          $ref: '#/definitions/OK'
        default:
          $ref: '#/definitions/Error'
  /user/verify:
    get:
      summary: Verify club 
      description: teehee
      tags:
        - user
      responses:
        200:
          $ref: '#/definitions/OK'
        default:
          $ref: '#/definitions/Error'

  /club/overview:
    get:
      summary: Overview of club information
      description: teehee
      tags:
        - club
      responses:
        200:
          $ref: '#/definitions/OK'
        default:
          $ref: '#/definitions/Error'
  /club/create:
    post:
      summary: Create a new club
      description: teehee
      tags:
        - club
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/club"
      responses:
        200:
          $ref: '#/definitions/OK'
        default:
          $ref: '#/definitions/Error'
  # /{club}/period/create:
  #   post:
  #     summary: Create a period for a club 
  #     description: teehee
  #     tags:
  #       - club
  #       - period
  #     parameters:
  #       - name: period
  #         in: body
  #         schema:
  #           $ref: "#/definitions/period"
  #       - name: club
  #         in: path
  #         type: string
  #         required: required
  #     responses:
  #       200:
  #         $ref: '#/definitions/OK'
  #       default:
  #         $ref: '#/definitions/Error'
  /{club}/period/{period}/event/create:
    post:
      summary: Create an event for a club's period
      description: teehee
      tags:
        - club
        - period
        - event
      parameters:
        - name: event
          in: body
          schema:
            $ref: "#/definitions/event"
          required: true
        - name: club
          in: path
          type: string
          format: string
          required: true
        - name: period
          in: path
          type: string
          format: string
          required: true
      responses:
        200:
          $ref: '#/definitions/OK'
        default:
          $ref: '#/definitions/Error'

# components:
#   schemas:
#     OKResponse:
#       required: [ code, message ]
#       properties:
#         code:
#           type: integer
#           example: 200
#           description: HTTP status code
#         message:
#           type: string
#           example: Successfully did something!
#           description: summary of response
#         request_id:
#           type: string
#           example: teeheebook/2Mch7LMzhj-000023
#           description: generated request ID corresponding to request
#         data:
#           type: object
#           additionalProperties: true
#           description: response data and additional context
#     ErrResponse:
#       required: [ code, message, error ]
#       properties:
#         code:
#           type: integer
#           example: 400
#           description: HTTP status code
#         message:
#           type: string
#           example: (example) could not do something
#           description: summary of response
#         error:
#           type: string
#           example: (example) value x is missing
#           description: detailed about error message
#         request_id:
#           type: string
#           example: example/2Mch7LMzhj-000023
#           description: generated request ID corresponding to request
#         data:
#           type: object
#           additionalProperties: true
#           description: additional context about error
#           example:
#             example: here is some additional information

definitions:
  OK:
    description: Successful club action!
    schema: 
      type: array
      items:
        $ref: "#/definitions/club"
  Error:
    description: Something went wrong - refer to the error code and message for more details
    schema:
      $ref: '#/definitions/error'
  # Models
  error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
  user:
    type: object
    properties:
      username:
        type: string
        minLength: 1
      password:
        type: string
        minLength: 1
      email:
        type: string
        minLength: 1
      school:
        type: string
        minLength: 1
  login:
    type: object
    properties:
      username:
        type: string
        minLength: 1
      password:
        type: string
        minLength: 1
  club:
    type: object
    properties:
      name:
        type: string
        minLength: 1
      description:
        type: string
        minLength: 1
  period:
    type: object
    properties:
      name:
        type: string
        minLength: 1
      start:
        type: string
        minLength: 1
      end:
        type: string
        minLength: 1
  event:
    type: object
    properties:
      name:
        type: string
        minLength: 1
      fields:
        type: string
        minLength: 1
