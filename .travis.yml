services:
  - docker

after_success:
  - bash <(curl -s https://codecov.io/bash) -F $TEST

matrix:
  include:
    # Check if compiled code is up to date
    - name: "Protoc Check"
      language: go
      go:
        - "1.11"
      install:
        - bash .scripts/install-protoc.sh
        - go get -u github.com/golang/protobuf/protoc-gen-go
      script:
        # generate code and exit with status 1 if diff is detected
        - make proto
        - git --no-pager diff protobuf
        - git diff-index --relative=protobuf --quiet HEAD --
      after_success: skip

    # Go components
    - name: "Core and Gateway Tests"
      language: go
      go:
        - "1.11"
      env:
        - TEST="golang"
      install:
        - go get -u golang.org/x/lint/golint
        - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        - dep ensure -v
      before_script:
        - go vet ./...
        - go build ./...
        # don't use development dynamodb setup, due to file permission issues
        - docker run -d -p 8000:8000 amazon/dynamodb-local
        - go test -run xxxx ./...
      script:
        - go fmt ./...
        - golint $(go list ./... | grep -v /vendor/) # golint doesn't ignore vendor
        - go test -race -timeout 5m -coverprofile=coverage.txt ./...

    # Frontend
    - name: "Frontend Tests"
      language: node_js
      node_js:
        - "8.12"
      env:
        - TEST="frontend"
      before_install: cd frontend
      install:
        - npm install
      before_script:
        - npm run lint
      script:
        - npm run build
        - npm test -- --coverage 

    # Client
    - name: "Client Tests"
      language: node_js
      node_js:
        - "8.12"
      env:
        - TEST="client"
      before_install: cd client
      install:
        - npm install
      before_script:
        - npm run lint
      script:
        - npm test

notifications: 
  email: false 
